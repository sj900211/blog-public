freshr:
  service:
    name: gateway
    serial: '01'
  minio:
    except:
      - test
      - local

server:
  port: 407${freshr.service.serial}

spring:
  application:
    name: infra-${freshr.service.name}

  docker:
    compose:
      enabled: false

  main:
    allow-circular-references: true
    allow-bean-definition-overriding: true

  profiles:
    active: test

  cloud:
    gateway:
      routes:
        - id: service-auth
          uri: lb://service-auth
          predicates:
            - Path=/auth/refresh
          filters:
            - RefreshTokenAuthenticationFilter
        - id: service-auth
          uri: lb://service-auth
          predicates:
            - Path=/auth/**
          filters:
            - AccessTokenAuthenticationFilter
        - id: service-logging
          uri: lb://service-logging
          predicates:
            - Path=/logging/**
          filters:
            - AccessTokenAuthenticationFilter
        - id: service-predefined
          uri: lb://service-predefined
          predicates:
            - Path=/predefined/**
          filters:
            - AccessTokenAuthenticationFilter
        - id: service-account
          uri: lb://service-account
          predicates:
            - Path=/account/**
          filters:
            - AccessTokenAuthenticationFilter
        - id: service-blog
          uri: lb://service-blog
          predicates:
            - Path=/blog/**
          filters:
            - AccessTokenAuthenticationFilter
        - id: service-conversation
          uri: lb://service-conversation
          predicates:
            - Path=/conversation/**
          filters:
            - AccessTokenAuthenticationFilter
        - id: service-customer
          uri: lb://service-customer
          predicates:
            - Path=/customer/**
          filters:
            - AccessTokenAuthenticationFilter
        - id: service-statistic
          uri: lb://service-statistic
          predicates:
            - Path=/statistic/**
          filters:
            - AccessTokenAuthenticationFilter
        - id: service-search
          uri: lb://service-search
          predicates:
            - Path=/search/**
          filters:
            - AccessTokenAuthenticationFilter
        - id: service-toy
          uri: lb://service-toy
          predicates:
            - Path=/toy/**
          filters:
            - AccessTokenAuthenticationFilter
        - id: service-task
          uri: lb://service-task
          predicates:
            - Path=/task/**
          filters:
            - AccessTokenAuthenticationFilter

  jpa:
    open-in-view: false
    show-sql: false
    generate-ddl: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        show-sql: false
        SQL: error
        format_sql: false
        use_sql_comments: false
        type:
          descriptor:
            sql: error
        jdbc:
          batch_size: 5
        default_batch_fetch_size: 1000

  datasource:
    hikari:
      minimumIdle: 200
      maximumPoolSize: 200
      poolName: SpringBootJPAHikariCP
      idleTimeout: 10000
      connection-timeout: 10000
      validation-timeout: 10000
      maxLifetime: 580000
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        useLocalSessionState: true
        useLocalTransactionState: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        maintainTimeStats: false

logging:
  level:
    root: error
