buildscript {
    ext {
        protobufPluginVersion = '0.9.3'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.google.protobuf' version "${protobufPluginVersion}"
    id 'maven-publish'
}

group = 'run.freshr'
version = '1.0.0.RELEASE'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven {
        url "https://:${GITHUB_READ_TOKEN}@maven.pkg.github.com/${GITHUB_OWNER}/*"
    }
    mavenCentral()
}

ext {
    set('protobufVersion', '3.22.3')
    set('grpcVersion', '1.55.1')
    set('springGrpcVersion', '2.14.0.RELEASE')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Configuration Processor
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // GRPC
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"

    implementation "net.devh:grpc-server-spring-boot-starter:${springGrpcVersion}"
    implementation "net.devh:grpc-client-spring-boot-starter:${springGrpcVersion}"

    // Jakarta
    compileOnly 'jakarta.annotation:jakarta.annotation-api:1.3.5'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc{}
        }
    }
}

sourceSets {
    src {
        main {
            java {
                srcDirs 'build/generated/source/proto/main/grpc'
                srcDirs 'build/generated/source/proto/main/java'
            }
        }
    }
}

test {
    useJUnitPlatform()
}

bootJar {
    enabled = false
}

jar {
    enabled = true
    archiveClassifier = ''
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact("build/libs/$rootProject.name-$version" + ".jar") {
                extension 'jar'
            }
        }
    }

    repositories {
        maven {
            url = "${GITHUB_MAVEN_PACKAGE}/${GITHUB_OWNER}/${rootProject.name}"
            credentials {
                username System.getenv("GITHUB_ACTOR")
                password System.getenv("GITHUB_TOKEN")
            }
        }
    }

    publishMavenPublicationToMavenRepository.dependsOn(jar)
}
